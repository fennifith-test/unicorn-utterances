---
import Document from "src/layouts/document.astro";

import SEO from "components/seo/seo.astro";

import type { MarkdownInstance } from "astro";
import { ExtendedPostInfo } from "types/index";
import BlogPost from "src/views/blog-post/blog-post.astro";
import { Languages } from "types/index";
import { getPostBySourcePath } from "utils/api";

export async function getStaticPaths() {
	const posts = [
		...(await Astro.glob("../../../../content/blog/**/*.md")),
		// TODO: Uncomment if any mdx/astro posts are added
		// ...await Astro.glob("../../../../content/blog/**/*.mdx"),
		// ...await Astro.glob("../../../../content/blog/**/*.astro"),
	];

	return posts.map((file) => {
		const post = getPostBySourcePath(file.file);

		return {
			params: {
				locale: post.locale !== "en" ? post.locale : undefined,
				postid: post.slug,
			},
			props: {
				locale: post.locale,
				Content: file.default,
				post,
			},
		};
	});
}

const { Content, post, locale } = Astro.props as {
	post: ExtendedPostInfo;
	locale: Languages;
	Content: MarkdownInstance<any>["Content"];
};
---

<Document lang={locale}>
	<SEO
		slot="head"
		title={post.title}
		description={post.description || post.excerpt}
		unicornsData={post.authorsMeta}
		publishedTime={post.published}
		editedTime={post.edited}
		keywords={post.tags}
		type="article"
		canonical={post.originalLink}
		langData={{
			otherLangs: post.locales.filter((t) => t != post.locale),
			currentLang: post.locale,
		}}
		shareImage={post.socialImg}
	/>
	<BlogPost Content={Content} post={post} />
</Document>
